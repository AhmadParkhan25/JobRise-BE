// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id               Int                 @id @default(autoincrement())
  role             Role
  name             String
  email            String              @unique
  password         String
  confirm_password String
  email_verified   EmailVerifiedStatus
  otp              String?             @default("")
  createdAt        DateTime            @default(now())
  updateAt         DateTime            @updatedAt()

  Profile      profiles?
  Company      company?
  applications applications[]
}

model profiles {
  id             Int     @id @default(autoincrement())
  user_id        Int     @unique
  username       String?
  email          String?
  full_name      String
  age            String
  address        String
  image          String
  phone          String
  bio            String
  linkedin       String?
  portofolio_url String?
  city           String?

  applications applications[]

  user users @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model company {
  id           Int    @id @default(autoincrement())
  user_id      Int    @unique
  company_name String
  address      String
  logo         String
  website      String
  industry     String
  description  String

  job jobs[]

  user users @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model jobs {
  id           Int      @id @default(autoincrement())
  companyId    Int
  company_name String
  company_logo String?
  title        String
  description  String
  salary_min   String
  salary_max   String
  location     String
  job_type     String
  is_active    IsActive
  createdAt    DateTime @default(now())

  applications applications[]

  company company @relation(fields: [companyId], references: [id], onDelete: Cascade)
}

model applications {
  id        Int      @id @default(autoincrement())
  userId    Int
  name_user String?
  jobId     Int
  profileId Int
  status    Status
  createdAt DateTime @default(now())

  user    users    @relation(fields: [userId], references: [id], onDelete: Cascade)
  job     jobs     @relation(fields: [jobId], references: [id], onDelete: Cascade)
  profile profiles @relation(fields: [profileId], references: [id], onDelete: Cascade)
}

enum EmailVerifiedStatus {
  yes
  no
}

enum Role {
  user
  company
}

enum IsActive {
  active
  deactive
}

enum Status {
  Accepted
  Screening
  Rejected
}
